function e(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}}),t.default=e,t}var t=e(require("@zxing/library"));function r(e,t,r){var n=document.createElement("canvas"),a=n.getContext("2d");return n.width=t,n.height=r,a.drawImage(e,0,0,t,r),a.getImageData(0,0,t,r)}var n=function(e){try{if(e instanceof HTMLImageElement){try{e.decode()}catch(e){throw new DOMException("HTMLImageElement is not decodable","InvalidStateError")}return Promise.resolve(r(e,e.naturalWidth,e.naturalHeight))}if(e instanceof SVGImageElement)return Promise.resolve(r(e,640,480));if(e instanceof HTMLVideoElement){if(0===e.readyState||1===e.readyState)throw new DOMException("","InvalidStateError");return Promise.resolve(r(e,e.videoWidth,e.videoHeight))}if(e instanceof HTMLCanvasElement){var t=e.getContext("2d");return Promise.resolve(t.getImageData(0,0,e.width,e.height))}if("ImageBitmap"in window&&e instanceof ImageBitmap)return Promise.resolve(r(e,e.width,e.height));if("OffscreenCanvas"in window&&e instanceof OffscreenCanvas){var n=e.getContext("2d");return Promise.resolve(n.getImageData(0,0,e.width,e.height))}return e instanceof Blob?Promise.resolve(a(e)):e instanceof ImageData?Promise.resolve(e):Promise.resolve()}catch(e){return Promise.reject(e)}},a=function(e){try{var t=URL.createObjectURL(e),r=new Image;return r.src=t,Promise.resolve(new Promise(function(e,t){r.onload=e,r.onerror=t})).then(function(){return URL.revokeObjectURL(t),n(r)})}catch(e){return Promise.reject(e)}},o=new Map([["aztec",t.BarcodeFormat.AZTEC],["code_39",t.BarcodeFormat.CODE_39],["code_128",t.BarcodeFormat.CODE_128],["data_matrix",t.BarcodeFormat.DATA_MATRIX],["ean_8",t.BarcodeFormat.EAN_8],["ean_13",t.BarcodeFormat.EAN_13],["itf",t.BarcodeFormat.ITF],["pdf417",t.BarcodeFormat.PDF_417],["qr_code",t.BarcodeFormat.QR_CODE],["upc_a",t.BarcodeFormat.UPC_A],["upc_e",t.BarcodeFormat.UPC_E]]),i=new Map(Array.from(o).map(function(e){return[e[1],e[0]]})),c=Array.from(o.keys()),m=function(e){var t=i.get(e.getBarcodeFormat()),r=e.getText(),n=Object.freeze(e.getResultPoints().map(function(e){return{x:e.getX(),y:e.getY()}})),a=n.map(function(e){return e.x}),o=n.map(function(e){return e.y}),c=Math.min.apply(Math,a),m=Math.max.apply(Math,a),u=Math.min.apply(Math,o),d=Math.max.apply(Math,o);return{format:t,rawValue:r,cornerPoints:n,boundingBox:DOMRectReadOnly.fromRect({x:c,y:u,width:m-c,height:d-u})}};module.exports=function(){function e(e){var r;this.reader=void 0;var n=null!=(r=null==e?void 0:e.formats)?r:c;if(0===n.length)throw new TypeError("");if(n.includes("unknown"))throw new TypeError("");var a=new Map([[t.DecodeHintType.POSSIBLE_FORMATS,n.map(function(e){return o.get(e)})]]);this.reader=new t.MultiFormatReader,this.reader.setHints(a)}return e.getSupportedFormats=function(){return Promise.resolve(c)},e.prototype.detect=function(e){try{var r=this;return Promise.resolve(n(e)).then(function(e){var n=document.createElement("canvas"),a=n.getContext("2d");n.width=e.width,n.height=e.height,a.putImageData(e,0,0);try{var o=new t.HTMLCanvasElementLuminanceSource(n),i=new t.BinaryBitmap(new t.HybridBinarizer(o)),c=r.reader.decode(i);return[m(c)]}catch(e){return console.error(e),[]}})}catch(e){return Promise.reject(e)}},e}();
//# sourceMappingURL=barcode-detector.js.map
